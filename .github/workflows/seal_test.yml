name: Python Code Security (Seal + Xray ZIP Upload)

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read

env:
  JFROG_CLI_BUILD_NAME: Python-Code-Security
  JF_URL: ${{ secrets.JF_URL }}

jobs:
  security-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # -- SEAL SECURITY FIX MODE --
      - name: Run Seal CLI - Fix Mode (Local)
        uses: seal-community/cli-action@latest
        with:
          mode: fix
          fix_mode: local
          token: ${{ secrets.SEAL_API_TOKEN }}
          project: ${{ secrets.SEAL_PROJECT_ID }}

      # -- PACKAGE CODE INTO A ZIP FILE --
      - name: Create ZIP Artifact
        run: |
          echo "ðŸ“¦ Zipping Python files and requirements..."
          zip -r seal-poc.zip app.py requirements.txt README.md

      # -- SETUP JFROG CLI WITH USERNAME + TOKEN --
      - uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: ${{ secrets.JF_URL }}

      - name: Configure JFrog CLI
        run: |
          jf config add my-server \
            --url=${{ secrets.JF_URL }} \
            --user=${{ secrets.JFROG_USER }} \
            --password=${{ secrets.JFROG_PASSWORD }} \
            --interactive=false

      - name: Validate JFrog Connection (Optional)
        run: jf rt ping

      # -- UPLOAD ZIP TO GENERIC REPO (demo-seal) --
      - name: Upload ZIP Artifact to Artifactory
        run: |
          echo "ðŸš€ Uploading seal-poc.zip to Artifactory..."
          jf rt upload "seal-poc.zip" demo-seal/seal-poc/seal-poc.zip
