name: Seal + Xray Docker Scan with Seal Fix Mode

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read

env:
  JFROG_CLI_BUILD_NAME: seal-docker-security
  JFROG_CLI_BUILD_NUMBER: ${{ github.run_number }}
  JF_URL: ${{ secrets.JF_URL }}

jobs:
  docker-security:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

# - name: Set up Python
#   uses: actions/setup-python@v4
#   with:
#     python-version: '3.9'

# - name: Install dependencies
#   run: |
#     python -m pip install --upgrade pip
#     pip install -r requirements.txt

# - name: Run Seal CLI - Fix Mode (Local)
#   uses: seal-community/cli-action@latest
#   with:
#     mode: fix
#     fix_mode: local
#     token: ${{ secrets.SEAL_API_TOKEN }}
#     project: ${{ secrets.SEAL_PROJECT_ID }}


      # âœ… Build Docker Image after patching with Seal
      - name: Build Docker Image with Seal Fixes
        run: |
          docker build \
          --build-arg SEAL_TOKEN=${{ secrets.SEAL_API_TOKEN }} \
          --build-arg SEAL_PROJECT=${{ secrets.SEAL_PROJECT_ID }} \
          -t cpart.jfrog.io/seal-docker-demo/seal-poc:${{ github.run_number }} .


      # âœ… Setup JFrog CLI
      - uses: jfrog/setup-jfrog-cli@v4
        with:
          version: latest

      - name: Configure JFrog CLI
        run: |
          jf config add my-server \
            --url=${{ secrets.JF_URL }} \
            --user=${{ secrets.JFROG_USER }} \
            --password=${{ secrets.JFROG_PASSWORD }} \
            --interactive=false
          jf config use my-server

      # âœ… Push Docker Image to Artifactory
      - name: Upload Docker Image to Artifactory
        run: |
          echo "ðŸ“¦ Pushing Docker image to Artifactory..."
          jf rt docker-push cpart.jfrog.io/seal-docker-demo/seal-poc:${{ github.run_number }} seal-docker-demo \
            --build-name=${{ env.JFROG_CLI_BUILD_NAME }} \
            --build-number=${{ env.JFROG_CLI_BUILD_NUMBER }} \
            --server-id=my-server

      # âœ… Publish Build Info
      - name: Publish Build Info to Artifactory
        run: |
          echo "ðŸš€ Publishing build info to Artifactory..."
          jf rt build-publish ${{ env.JFROG_CLI_BUILD_NAME }} ${{ env.JFROG_CLI_BUILD_NUMBER }} \
            --server-id=my-server
