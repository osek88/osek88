name: Seal + Xray Docker Scan with Seal Fix Mode

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read

env:
  JFROG_CLI_BUILD_NAME: seal-docker-security
  JFROG_CLI_BUILD_NUMBER: ${{ github.run_number }}
  JF_URL: ${{ secrets.JF_URL }}

jobs:
  docker-security:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --extra-index-url https://75049205E85355B1A98440585115173D45BC2A0B:eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImJhYzE2Mjc3In0.eyJzdWIiOiI0NDZhOThkNC1hMTNhLTQzNWQtYWVhZC00NTY5OTNiMGE5MzMiLCJ0eXBlIjoidGVuYW50QWNjZXNzVG9rZW4iLCJ0ZW5hbnRJZCI6ImI1ZDU0NzA5LWFkZTYtNGMyZi05MTUzLTI5NTRmNDNlZTY0MCIsImFwcGxpY2F0aW9uSWQiOiIwMWQ3NTcxMy04NjZlLTRlZGYtODQ3Zi1lZDkwYTk0Nzg1ZGIiLCJyb2xlcyI6WyJGRVRDSC1ST0xFUy1CWS1BUEkiXSwicGVybWlzc2lvbnMiOlsiRkVUQ0gtUEVSTUlTU0lPTlMtQlktQVBJIl0sImF1ZCI6ImJhYzE2Mjc3LTVjYmUtNDA3Yy04MjM5LWRmZmY3Mzk4ZWIwZSIsImlzcyI6Imh0dHBzOi8vbG9naW4uc2VhbHNlY3VyaXR5LmlvIiwiaWF0IjoxNzQ3MzAyNzk0fQ.Ge8mYWablWtWbpDybkexCn5ABV9DzCROSCqWLygzpqlZLPwWQkFiQi0WqEegfgqf_J15uevQb4aQtIoE4UYuU6GNnB4aPj0OcgIF3FpDoRCNbXGqkK-9ojvSYKomKu6pUqv_xBEJfUaAd9gYXvg6NPrMi6du_BCurqJAyV8wfNapsKWRtQjYJDhNjerSXu5DvkEgj4brqw9IxieZx34hvta6iMQLl5enQl_EIU6psNLspa2HdOUaUdP50a30MErK9wTmcd_I6yoIiEs8PXqFjG_nR4h-fgc33z3vPKQ5i7LU9D35hESVOt1YWsrZ1waFeSVaXN-GzNUYPjbcwYJriQ@pypi.sealsecurity.io/simple -r requirements.txt

      # ‚úÖ Run Seal Security in Fix Mode (Local)
      - name: Run Seal CLI - Fix Mode (Local)
        uses: seal-community/cli-action@latest
        with:
          mode: fix
          fix_mode: local
          token: ${{ secrets.SEAL_API_TOKEN }}
          project: ${{ secrets.SEAL_PROJECT_ID }}

      # ‚úÖ Build Docker Image after patching with Seal
      - name: Build Docker Image
        run: |
          echo "üê≥ Building Docker image..."
          docker build -t cpart.jfrog.io/seal-docker-demo/seal-poc:${{ github.run_number }} .

      # ‚úÖ Setup JFrog CLI
      - uses: jfrog/setup-jfrog-cli@v4
        with:
          version: latest

      - name: Configure JFrog CLI
        run: |
          jf config add my-server \
            --url=${{ secrets.JF_URL }} \
            --user=${{ secrets.JFROG_USER }} \
            --password=${{ secrets.JFROG_PASSWORD }} \
            --interactive=false
          jf config use my-server

      # ‚úÖ Push Docker Image to Artifactory
      - name: Upload Docker Image to Artifactory
        run: |
          echo "üì¶ Pushing Docker image to Artifactory..."
          jf rt docker-push cpart.jfrog.io/seal-docker-demo/seal-poc:${{ github.run_number }} seal-docker-demo \
            --build-name=${{ env.JFROG_CLI_BUILD_NAME }} \
            --build-number=${{ env.JFROG_CLI_BUILD_NUMBER }} \
            --server-id=my-server

      # ‚úÖ Publish Build Info
      - name: Publish Build Info to Artifactory
        run: |
          echo "üöÄ Publishing build info to Artifactory..."
          jf rt build-publish ${{ env.JFROG_CLI_BUILD_NAME }} ${{ env.JFROG_CLI_BUILD_NUMBER }} \
            --server-id=my-server
